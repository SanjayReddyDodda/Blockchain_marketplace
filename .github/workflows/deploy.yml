name: Deploy Blockchain Marketplace

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Validate HTML
        run: |
          # Install html5validator for HTML validation
          pip install html5validator
          html5validator --root . --match "*.html" --log INFO || echo "HTML validation completed with warnings"

      - name: Validate CSS
        run: |
          # Install css-validator (using npm package)
          npm install -g css-validator-cli
          css-validator styles.css || echo "CSS validation completed"

      - name: Check JavaScript syntax
        run: |
          # Use Node.js to check JavaScript syntax
          node -c app.js
          echo "JavaScript syntax check passed"

      - name: Create build directory
        run: |
          mkdir -p build
          cp index.html build/
          cp styles.css build/
          cp app.js build/
          
          # Replace contract address with environment variable if provided
          if [ ! -z "${{ vars.CONTRACT_ADDRESS }}" ]; then
            sed -i "s/0x0a82432b3e404d62360849b619fA347803dAaa5e/${{ vars.CONTRACT_ADDRESS }}/g" build/app.js
            echo "Contract address updated to: ${{ vars.CONTRACT_ADDRESS }}"
          else
            echo "Using default contract address from source"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Test job - runs after deployment to verify the site is accessible
  test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Test deployed site
        run: |
          # Test if the deployed site is accessible
          SITE_URL="${{ needs.deploy.outputs.page_url }}"
          echo "Testing deployment at: $SITE_URL"
          
          # Check if site returns 200 status
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $SITE_URL || echo "000")
          
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "✅ Site is accessible and returning 200 OK"
          else
            echo "❌ Site returned status: $HTTP_STATUS"
            exit 1
          fi
          
          # Check if essential files are present
          curl -s "$SITE_URL" | grep -q "Marketplace" && echo "✅ HTML title found" || echo "❌ HTML title not found"
          curl -s "$SITE_URL" | grep -q "connectWallet" && echo "✅ Connect wallet button found" || echo "❌ Connect wallet button not found"